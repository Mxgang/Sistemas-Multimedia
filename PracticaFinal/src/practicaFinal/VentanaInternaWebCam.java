/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package practicaFinal;

import com.github.sarxos.webcam.Webcam;
import com.github.sarxos.webcam.WebcamDiscoveryService;
import com.github.sarxos.webcam.WebcamPanel;
import com.github.sarxos.webcam.WebcamPicker;
import com.github.sarxos.webcam.WebcamResolution;


import java.awt.BorderLayout;
import java.awt.image.BufferedImage;
import javax.swing.JOptionPane;


import java.awt.Component;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;

/**
 * Clase que gestiona la webCam
 * @author maxigang
 */
public class VentanaInternaWebCam extends javax.swing.JInternalFrame {


    /**
     * Creates new form VentanaInternaCamera
     */
    private Webcam camara = null;
    
    /**
     * Constructor que inicia la webCam
     */
    public VentanaInternaWebCam() {

        initComponents();
        camara = Webcam.getDefault();
        if (camara != null) {
            WebcamPanel areaVisual = new WebcamPanel(camara);
            if (areaVisual!= null) {
                getContentPane().add(areaVisual, BorderLayout.CENTER);
                pack();
            }
        }
        
    }
    
    /**
     * Método getInstance que llama al constructor internamente
     * @param f archivo de vídeo
     * @return en caso de error al crear el Player, devuelve null
     */
    public static VentanaInternaWebCam getInstance(File f){
        VentanaInternaWebCam v = new VentanaInternaWebCam();
        return (v.camara!=null?v:null);
    }
    
    /**
     * Método que obtiene una captura de pantalla de lo que haya en la ventana
     * @return devuelve la imagen
     */
    public BufferedImage getFrame(){
        BufferedImage img = camara.getImage();
        return img;
    }
    
    /**
     * Método donde obtienes la cámara actual
     * @return devuelve la cámara actual
     */
    public Webcam getCamera(){
        return camara;
    }
    
    /**
     * Método que cierra la cámara
     */
    public void cerrar(){
        camara.close();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 394, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 274, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        // TODO add your handling code here:
        cerrar();
    }//GEN-LAST:event_formInternalFrameClosing


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
